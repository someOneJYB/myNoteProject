{"version":3,"sources":["webpack:///./src/page/Home/index.js","webpack:///./src/component/Mbtn/index.js"],"names":["Home","useState","a","count","setCount","useEffect","setTimeout","className","onClick","text","Btn","props","Mbtn","React","Component","state","num","val","this","setState","prevProps","click"],"mappings":"mqCAIe,SAASA,IAAO,QAEDC,mBAAS,CAACC,EAAG,IAFZ,GAEpBC,EAFoB,KAEbC,EAFa,KAgB3B,OALAC,oBAAU,WACNC,WAAW,aAER,MACJ,CAACH,IAEA,6BACI,uBAAGI,UAAU,QAAb,eAAiCJ,EAAMD,EAAvC,UACA,4BAAQM,QAAS,kBAAMJ,EAAS,CAACF,EAAGC,EAAMD,EAAI,MAA9C,YAGA,kBAAC,IAAD,CAAKO,KAAMN,EAAMD,IACjB,yBAAKM,QAnBb,WAEIF,WAAW,aAER,OAeC,iB,2vCC1BG,SAASI,EAAIC,GACxB,OAAO,kBAACC,EAASD,G,IAEfC,E,iPAAaC,IAAMC,W,iBACrB,WAAYH,GAAO,a,4FAAA,UACf,cAAMA,IACDI,MAAQ,CACTb,EAAG,EACHc,IAAK,EACLC,IAAK,GALM,E,+DA4Bf,OAAO,S,6CApBS,WAChBC,KAAKC,SAAS,CAACF,IAAKC,KAAKH,MAAME,IAAM,IAGrCC,KAAKC,SAAS,CAACF,IAAKC,KAAKH,MAAME,IAAM,IAGrCX,WAAW,WACP,EAAKa,SAAS,CAACF,IAAK,EAAKF,MAAME,IAAM,IAGrC,EAAKE,SAAS,CAACF,IAAK,EAAKF,MAAME,IAAM,KAEtC,K,mJAgBH,OAAO,I,wFAOQG,GAEZF,KAAKP,MAAMK,MAAQI,EAAUJ,KAC5BE,KAAKC,SAAS,CACVjB,EAAGgB,KAAKH,MAAMb,EAAI,M,+BAgB1B,OAAO,wBAAIM,QAASU,KAAKG,OAAlB,SAAgCH,KAAKP,MAAMF,W","file":"4.bundle.c6591cbb.js","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport Btn from '../../component/Mbtn'\n\nimport './index.less'\nexport default function Home() {\n    // Declare a new state variable, which we'll call \"count\"\n    const [count, setCount] = useState({a: 0});\n    console.log('点击', count)\n    function handleClick() {\n        console.log('btn')\n        setTimeout(()=> {\n            console.log('count', count)\n        }, 2000)\n    }\n    // 在每次外部\n    useEffect(function() {\n        setTimeout(()=> {\n            console.log('count', count)\n        }, 2000)\n    }, [count]);\n    return (\n        <div>\n            <p className=\"text\">You clicked {count.a} times</p>\n            <button onClick={() => setCount({a: count.a + 1})}>\n                Click me\n            </button>\n            <Btn text={count.a}/>\n            <div onClick={handleClick}>count 值的变化</div>\n        </div>\n    );\n}\n","import React from 'react';\nexport default function Btn(props) {\n    return <Mbtn {...props} />\n}\nclass Mbtn extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            a: 1,\n            num: 0,\n            val: 0,\n        }\n    }\n    componentDidMount() {\n        this.setState({val: this.state.val + 1});\n        console.log(this.state.val, 'first');    // 第 1 次 log\n\n        this.setState({val: this.state.val + 1});\n        console.log(this.state.val, 'second');    // 第 2 次 log\n// 但是已经积累了\n        setTimeout(() => {\n            this.setState({val: this.state.val + 1});\n            console.log(this.state.val, 'three');  // 第 3 次 log\n// 异步更新执行 render\n            this.setState({val: this.state.val + 1});\n            console.log(this.state.val, 'four');  // 第 4 次 log\n        }, 0);\n    }\n    componentWillUnmount() {\n        console.log('unmount')\n    }\n    static getDerivedStateFromProps(nextProps, prevState) {\n        console.log(nextProps, prevState);\n        return null\n    }\n\n    componentWillReceiveProps(nextProps, nextContext) {\n        console.log('props', this.props, nextProps, nextContext)\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        console.log('should', nextProps, nextState, nextContext, this.props)\n        return true\n    }\n\n    componentWillUpdate(nextProps, nextState, nextContext) {\n        console.log('williupdate', nextProps, nextState, this.props)\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n\n        if(this.props.num !== prevProps.num) {\n            this.setState({\n                a: this.state.a + 1,\n            })\n        }\n        // console.log('didiupdate', prevProps, prevState, snapshot, this.props)\n    }\n    // click = () => {\n    //     Promise.resolve().then(res => {\n    //             this.setState({\n    //                 num: 8\n    //             })\n    //             console.log('num', this.state.num)\n    //     })\n    // }\n\n    render(){\n        console.log('render', this.state.num)\n        return <h1 onClick={this.click}>hahaha{this.props.text}</h1>\n    }\n}\n\n// 生命周期的模仿写需要在 render\n"],"sourceRoot":""}